
name: Setup-Nginx

on:
  pull_request:
    types:
      - opened

#      - closed
#    branches:
#  branches:
#    - feature1
#      - main
#    tags:
#      - v1
jobs:

  job1:
    runs-on: ubuntu-latest
    # Expose step outputs as job outputs
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
    - id: step1
      run: echo "test=hello" >> "$GITHUB_OUTPUT"
    - id: step2
      run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}




  build:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: echo "Build successful"

  test:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build 
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run Basic Tests
      run: echo "Tests successful!"

  deploy:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [build,test]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Deploy to ECR
      run: echo "Deploy to Amazon ECR"

  setup-nginx:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      USER_NAME: ${{ env.USER_NAME }}
      USER_PASSWORD: ${{ env.USER_PASSWORD }}
    needs: [build,test,deploy]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: print name
      run: echo "My USER_NAME is ${{env.USER_NAME}}. USER_PASSWORD is ${{env.USER_PASSWORD}}"

    - name: Create and Navigate to Directory
      run: |
        mkdir github-action-nginx
        cd github-action-nginx
        touch code.html

    - name: Update and Upgrade
      run: sudo apt-get update && sudo apt-get upgrade -y

    - name: Install Nginx
      run: sudo apt-get install nginx -y

    - name: Start Nginx
      run: sudo service nginx start

    - name: staus nginx
      run: sudo systemctl status nginx



      
